#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('node-backend:server');
const http = require('http');

const port = process.env.PORT || '8080';
app.set('port', port);

let server = http.createServer(app);

server.on('listening', onListening);
server.on('error', onError);
server.listen(app.get('port'));

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
